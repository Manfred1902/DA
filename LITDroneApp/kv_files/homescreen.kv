#:kivy 1.1.1
#: import utils kivy.utils
<DrawerClickableItem@MDNavigationDrawerItem>
    focus_color: "#e7e4c0"
    text_color: "#4a4939"
    icon_color: "#4a4939"
    ripple_color: "#c5bdd2"
    selected_color: "#0c6c4d"


<DrawerLabelItem@MDNavigationDrawerItem>
    text_color: "#4a4939"
    icon_color: "#4a4939"
    focus_behavior: False
    selected_color: "#4a4939"
    _no_ripple_effect: True

<HomeScreen>:
    MDBoxLayout:
        orientation: 'vertical'
        
        MDTopAppBar:
            title: "Auto Commands"
            pos_hint: {"top": 1, "right": 1}
            left_action_items:
                [["menu", lambda x: nav_drawer.set_state("open")]]
            right_action_items:
                [["arrow-right", lambda x: app.change_screen("controller_screen"), "Switch to Controller"]]

        MDBoxLayout:
            orientation: 'vertical'
            padding: '20dp'

            MDScrollView:
                scroll_wheel_distance: 50
                MDList:
                    spacing: '20dp'

                    MDCard:
                        orientation: 'vertical'
                        size_hint_y: None
                        height: '300dp'
                        radius: 10
                        padding: '20dp'
                        md_bg_color: utils.get_color_from_hex("#DCDCDD")

                        MDLabel:
                            text: "Takeoff"
                            font_name: "Roboto-Bold"
                            font_size: "20sp"
                            pos_hint: {"center_x": 0.556, "center_y": 0.95}

                        MDLabel:
                            text: "Diese Funktion führt einen Test aus, um zu sehen, ob die Drohne \nmit der App verbunden und gestartet werden kann. \nBeim Start testet sie die Bewegungen in alle Richtungen."
                            pos_hint: {"center_x": 0.556, "center_y": 0.65}

                        MDTextField:
                            helper_text: "Es sind nur Zahlen von 1-99 erlaubt."
                            helper_text_mode: "on_error"
                            id: takeoff_height
                            hint_text: "Flughöhe"
                            size_hint_x: 0.4
                            text_color: (0.5, 0.5, 0.5, 1)
                            pos_hint: {"center_x": 0.3, "center_y": 0.3}
                            multiline: False
                            input_filter: 'int'
                            icon_left: "human-male-height-variant"
                            max_text_length: 2

                        MDRaisedButton:                        
                            text: "Start"
                            height: 0.1 * root.height
                            width:  0.2 * root.width
                            md_bg_color: (0.6, 0.6, 0.6, 1)
                            on_release: root.startTakeoff()
                            pos_hint: {"center_x": 0.8, "center_y": 0.125}
                    MDCard:
                        orientation: 'vertical'
                        size_hint_y: None
                        height: '300dp'
                        padding: '20dp'
                        radius: 10
                        md_bg_color: utils.get_color_from_hex("#DCDCDD")
                        
                        MDLabel:
                            text: "Rotation Test"
                            font_name: "Roboto-Bold"
                            font_size: "20sp"
                            pos_hint: {"center_x": 0.56, "center_y": 0.95}

                        MDLabel:
                            text: "Methode zum Testen von allen Grundfunktionen der Drohne, indem es in alle Richtungen fliegt und rotiert."
                            pos_hint: {"center_x": 0.556, "center_y": 0.75}

                        MDTextField:
                            helper_text: "Es sind nur Zahlen zwischen 1-259 erlaubt."
                            helper_text_mode: "on_error"
                            id: rotation_grad
                            hint_text: "Rotations Grad"
                            size_hint_x: 0.4
                            text_color: (1, 1, 0.5, 0.6)
                            pos_hint: {"center_x": 0.3, "center_y": 0.3}
                            multiline: False
                            input_filter: 'int'
                            icon_left: "angle-acute"
                            max_text_length: 3

                        MDTextField:
                            helper_text: "Es sind nur Zahlen von 1-99 erlaubt."
                            helper_text_mode: "on_error"
                            id: rotation_height
                            hint_text: "Flughöhe"
                            size_hint_x: 0.4
                            text_color: (0.5, 0.5, 0.5, 1)
                            pos_hint: {"center_x": 0.3, "center_y": 0.3}
                            multiline: False
                            input_filter: 'int'
                            icon_left: "human-male-height-variant"
                            max_text_length: 2

                        MDRaisedButton:
                            text: "Start"
                            height: 0.1 * root.height
                            width:  0.2* root.width
                            md_bg_color: (0.6, 0.6, 0.6, 1)
                            on_release: root.startRotate()
                            pos_hint: {"center_x": 0.8, "center_y": 0.125}

                    MDCard:
                        orientation: 'vertical'
                        size_hint_y: None
                        height: '300dp'
                        padding: '20dp'
                        radius: 10
                        md_bg_color: utils.get_color_from_hex("#DCDCDD")

                        MDLabel:
                            text: "Diagonal Flight Test"
                            font_name: "Roboto-Bold"
                            font_size: "20sp"
                            pos_hint: {"center_x": 0.556, "center_y": 0.95}

                        MDLabel:
                            text: "Testet alle Flugrichtungen in die es Fliegen kann, auch genannt (Criss-Cross)."
                            pos_hint: {"center_x": 0.556, "center_y": 0.65}

#                        MDTextField:
#                            helper_text: "Es sind nur Zahlen von 1-99 erlaubt."
#                            helper_text_mode: "on_error"
#                            id: diagonal_flight_length
#                            hint_text: "Koordinate x-y-x"
#                            size_hint_x: 0.4
#                            text_color: (0.5, 0.5, 0.5, 1)
#                            pos_hint: {"center_x": 0.3, "center_y": 0.3}
#                            multiline: False
#                            input_filter: 'int'
#                            icon_left: "map-marker-distance"
#                            max_text_length: 2

                        MDTextField:
                            helper_text: "Es sind nur Zahlen von 1-99 erlaubt."
                            helper_text_mode: "on_error"
                            id: diagonal_flight_height
                            hint_text: "Flughöhe"
                            size_hint_x: 0.4
                            text_color: (0.5, 0.5, 0.5, 1)
                            pos_hint: {"center_x": 0.3, "center_y": 0.3}
                            multiline: False
                            input_filter: 'int'
                            icon_left: "human-male-height-variant"
                            max_text_length: 2

                        MDRaisedButton:
                            text: "Start"
                            height: 0.1 * root.height
                            width:  0.2* root.width
                            md_bg_color: (0.6, 0.6, 0.6, 1)
                            on_release: root.startDiagonalFlight()
                            pos_hint: {"center_x": 0.8, "center_y": 0.125}

                    MDCard:
                        orientation: 'vertical'
                        size_hint_y: None
                        height: '300dp'
                        padding: '20dp'
                        radius: 10
                        md_bg_color: utils.get_color_from_hex("#DCDCDD")

                        MDLabel:
                            text: "Coordination Flight Test"
                            font_name: "Roboto-Bold"
                            font_size: "20sp"
                            pos_hint: {"center_x": 0.556, "center_y": 0.95}

                        MDLabel:
                            text: "Testet alle Flugrichtungen in die es Fliegen kann, anhand von Koordinaten."
                            pos_hint: {"center_x": 0.556, "center_y": 0.65}

                        MDTextField:
                            helper_text: "Es sind nur Zahlen von 1-99 erlaubt."
                            helper_text_mode: "on_error"
                            id: coordination_height
                            hint_text: "Flughöhe"
                            size_hint_x: 0.4
                            text_color: (0.5, 0.5, 0.5, 1)
                            pos_hint: {"center_x": 0.3, "center_y": 0.3}
                            multiline: False
                            input_filter: 'int'
                            icon_left: "human-male-height-variant"
                            max_text_length: 2

                        MDRaisedButton:
                            text: "Start"
                            height: 0.1 * root.height
                            width:  0.2* root.width
                            md_bg_color: (0.6, 0.6, 0.6, 1)
                            on_release: root.startCoordinationFlight()
                            pos_hint: {"center_x": 0.8, "center_y": 0.125}

                    MDCard:
                        orientation: 'vertical'
                        size_hint_y: None
                        height: '300dp'
                        padding: '20dp'
                        radius: 10
                        md_bg_color: utils.get_color_from_hex("#DCDCDD")

                        MDLabel:
                            text: "Front Flip Test"
                            font_name: "Roboto-Bold"
                            font_size: "20sp"
                            pos_hint: {"center_x": 0.556, "center_y": 0.95}

                        MDLabel:
                            text: "Testet die Flipfähigkeit der Drone nach vorne."
                            pos_hint: {"center_x": 0.556, "center_y": 0.65}

                        MDTextField:
                            helper_text: "Es sind nur Zahlen von 1-99 erlaubt."
                            helper_text_mode: "on_error"
                            id: front_flip_height
                            hint_text: "Flughöhe"
                            size_hint_x: 0.4
                            text_color: (0.5, 0.5, 0.5, 1)
                            pos_hint: {"center_x": 0.3, "center_y": 0.3}
                            multiline: False
                            input_filter: 'int'
                            icon_left: "human-male-height-variant"
                            max_text_length: 2

                        MDRaisedButton:
                            text: "Start"
                            height: 0.1 * root.height
                            width:  0.2* root.width
                            md_bg_color: (0.6, 0.6, 0.6, 1)
                            on_release: root.startCoordinationFlight()
                            pos_hint: {"center_x": 0.8, "center_y": 0.125}
                            
                    MDCard:
                        orientation: 'vertical'
                        size_hint_y: None
                        height: '300dp'
                        padding: '20dp'
                        radius: 10
                        md_bg_color: utils.get_color_from_hex("#DCDCDD")

                        MDLabel:
                            text: "Back Flip Test"
                            font_name: "Roboto-Bold"
                            font_size: "20sp"
                            pos_hint: {"center_x": 0.556, "center_y": 0.95}

                        MDLabel:
                            text: "Testet die Flipfähigkeit der Drone nach hinten."
                            pos_hint: {"center_x": 0.556, "center_y": 0.65}

                        MDTextField:
                            helper_text: "Es sind nur Zahlen von 1-99 erlaubt."
                            helper_text_mode: "on_error"
                            id: back_flip_height
                            hint_text: "Flughöhe"
                            size_hint_x: 0.4
                            text_color: (0.5, 0.5, 0.5, 1)
                            pos_hint: {"center_x": 0.3, "center_y": 0.3}
                            multiline: False
                            input_filter: 'int'
                            icon_left: "human-male-height-variant"
                            max_text_length: 2

                        MDRaisedButton:
                            text: "Start"
                            height: 0.1 * root.height
                            width:  0.2* root.width
                            md_bg_color: (0.6, 0.6, 0.6, 1)
                            on_release: root.startCoordinationFlight()
                            pos_hint: {"center_x": 0.8, "center_y": 0.125}
                            
                    MDCard:
                        orientation: 'vertical'
                        size_hint_y: None
                        height: '300dp'
                        padding: '20dp'
                        radius: 10
                        md_bg_color: utils.get_color_from_hex("#DCDCDD")

                        MDLabel:
                            text: "Right Flip Test"
                            font_name: "Roboto-Bold"
                            font_size: "20sp"
                            pos_hint: {"center_x": 0.556, "center_y": 0.95}

                        MDLabel:
                            text: "Testet die Flipfähigkeit der Drone in die Rechte Richtung."
                            pos_hint: {"center_x": 0.556, "center_y": 0.65}

                        MDTextField:
                            helper_text: "Es sind nur Zahlen von 1-99 erlaubt."
                            helper_text_mode: "on_error"
                            id: right_flip_height
                            hint_text: "Flughöhe"
                            size_hint_x: 0.4
                            text_color: (0.5, 0.5, 0.5, 1)
                            pos_hint: {"center_x": 0.3, "center_y": 0.3}
                            multiline: False
                            input_filter: 'int'
                            icon_left: "human-male-height-variant"
                            max_text_length: 2

                        MDRaisedButton:
                            text: "Start"
                            height: 0.1 * root.height
                            width:  0.2* root.width
                            md_bg_color: (0.6, 0.6, 0.6, 1)
                            on_release: root.startCoordinationFlight()
                            pos_hint: {"center_x": 0.8, "center_y": 0.125}
                            
                    MDCard:
                        orientation: 'vertical'
                        size_hint_y: None
                        height: '300dp'
                        padding: '20dp'
                        radius: 10
                        md_bg_color: utils.get_color_from_hex("#DCDCDD")

                        MDLabel:
                            text: "Left Flip Test"
                            font_name: "Roboto-Bold"
                            font_size: "20sp"
                            pos_hint: {"center_x": 0.556, "center_y": 0.95}

                        MDLabel:
                            text: "Testet die Flipfähigkeit der Drone in die Linke Richtung."
                            pos_hint: {"center_x": 0.556, "center_y": 0.65}

                        MDTextField:
                            helper_text: "Es sind nur Zahlen von 1-99 erlaubt."
                            helper_text_mode: "on_error"
                            id: left_flip_height
                            hint_text: "Flughöhe"
                            size_hint_x: 0.4
                            text_color: (0.5, 0.5, 0.5, 1)
                            pos_hint: {"center_x": 0.3, "center_y": 0.3}
                            multiline: False
                            input_filter: 'int'
                            icon_left: "human-male-height-variant"
                            max_text_length: 2

                        MDRaisedButton:
                            text: "Start"
                            height: 0.1 * root.height
                            width:  0.2* root.width
                            md_bg_color: (0.6, 0.6, 0.6, 1)
                            on_release: root.startLeftFlip()
                            pos_hint: {"center_x": 0.8, "center_y": 0.125}

#            MDRoundFlatButton:
#                id: homescreen_exp
#                size_hint_x: 0.5
#                pos_hint: {"center_x": 0.6, "center_y": 0.8}
#                color: utils.get_color_from_hex("#448AFFFF")
#                text: "[b]Homescreen Exp[/b]"
#                halign: "center"
#                markup: True
#                on_press: root.manager.current="homescreen_exp"

    MDNavigationDrawer:
        id: nav_drawer
        radius: (0, 16, 16, 0)
        MDNavigationDrawerMenu:
            MDNavigationDrawerHeader:
                title: "Menu"
                title_color: "#4a4939"
                text: "Control Panel"
                spacing: "4dp"
                padding: "12dp", 0, 0, "56dp"

            MDNavigationDrawerLabel:
                text: "Pages"

            DrawerClickableItem:
                icon: "home-circle"
                text_right_color: "#4a4939"
                text: "Homepage"
                on_press: root.manager.current="home_screen"
                on_release: nav_drawer.set_state("close")

            DrawerClickableItem:
                icon: "controller"
                text: "Controller"
                on_press: root.manager.current="controller_screen"
                on_release: nav_drawer.set_state("close")

            DrawerClickableItem:
                icon: "information-outline"
                text: "Information"
                on_press: root.manager.current="description_screen"
                on_release: nav_drawer.set_state("close")

            MDNavigationDrawerDivider:

            MDNavigationDrawerLabel:
                text: "Account"

            DrawerLabelItem:
                icon: "cog"
                text: "Settings"
                on_press: root.manager.current="settings_screen"
                on_release: nav_drawer.set_state("close")

            DrawerLabelItem:
                icon: "logout"
                text: "Logout"
                on_press: root.manager.current="login_screen"
                on_release: nav_drawer.set_state("close")

            DrawerLabelItem:
                icon: "exit-to-app"
                text: "Exit"
                on_press: app.stop()
                on_release: nav_drawer.set_state("close")